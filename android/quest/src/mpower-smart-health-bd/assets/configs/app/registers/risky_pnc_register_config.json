{
  "appId": "app",
  "configType": "register",
  "id": "riskyPncRegister",
  "fhirResource": {
    "baseResource": {
      "resource": "Patient",
      "nestedSearchResources": [
        {
          "resourceType": "Condition",
          "referenceParam": "subject",
          "dataQueries": [
            {
              "paramName": "code",
              "filterCriteria": [
                {
                  "dataType": "CODEABLECONCEPT",
                  "value": {
                    "system": "http://snomed.info/sct",
                    "code": "234234234"
                  }
                },
                {
                  "dataType": "CODEABLECONCEPT",
                  "value": {
                    "system": "http://snomed.info/sct",
                    "code": "high-risk-pnc"
                  }
                }
              ]
            },
            {
              "paramName": "clinical-status",
              "filterCriteria": [
                {
                  "dataType": "CODEABLECONCEPT",
                  "value": {
                    "system": "http://terminology.hl7.org/CodeSystem/condition-clinical",
                    "code": "active"
                  }
                }
              ]
            }
          ]
        }
      ],
      "sortConfigs": [
        {
          "paramName": "_lastUpdated",
          "dataType": "DATE",
          "order": "DESCENDING"
        }
      ]
    },
    "relatedResources": [
      {
        "resource": "Group",
        "searchParameter": "member"
      },
      {
        "resource": "Condition",
        "searchParameter": "subject",
        "dataQueries": [
          {
            "paramName": "clinical-status",
            "filterCriteria": [
              {
                "dataType": "CODEABLECONCEPT",
                "value": {
                  "system": "http://terminology.hl7.org/CodeSystem/condition-clinical",
                  "code": "active"
                }
              }
            ]
          }
        ]
      },
      {
        "resource": "Task",
        "searchParameter": "subject",
        "dataQueries": [
          {
            "paramName": "status",
            "operation": "OR",
            "filterCriteria": [
              {
                "dataType": "CODE",
                "value": {
                  "system": "http://hl7.org/fhir/task-status",
                  "code": "ready"
                }
              },
              {
                "dataType": "CODE",
                "value": {
                  "system": "http://hl7.org/fhir/task-status",
                  "code": "failed"
                }
              }
            ]
          }
        ],
        "sortConfigs": [
          {
            "paramName": "period",
            "dataType": "DATE"
          }
        ]
      },
      {
        "resource": "Observation",
        "searchParameter": "subject"
      },
      {
        "resource": "Encounter",
        "searchParameter": "subject"
      }
    ]
  },
  "secondaryResources": [
    {
      "baseResource": {
        "id": "commodities",
        "resource": "Group",
        "dataQueries": [
          {
            "paramName": "code",
            "filterCriteria": [
              {
                "dataType": "CODE",
                "value": {
                  "system": "http://snomed.info/sct",
                  "code": "386452003"
                }
              }
            ]
          },
          {
            "paramName": "identifier",
            "filterCriteria": [
              {
                "dataType": "CODE",
                "value": {
                  "code": "20005544332"
                }
              }
            ]
          }
        ]
      },
      "relatedResources": [
        {
          "id": "stockObservations",
          "resource": "Observation",
          "searchParameter": "subject",
          "dataQueries": [
            {
              "paramName": "status",
              "filterCriteria": [
                {
                  "dataType": "CODE",
                  "value": {
                    "code": "preliminary"
                  }
                }
              ]
            }
          ],
          "sortConfigs": [
            {
              "paramName": "date",
              "dataType": "DATE",
              "order": "DESCENDING"
            }
          ]
        },
        {
          "id": "stockOutFlags",
          "resource": "Flag",
          "searchParameter": "subject"
        }
      ]
    }
  ],
  "searchBar": {
    "visible": true,
    "display": "{{ search.by.name }}",
    "computedRules": [
      "patientName",
      "patientId"
    ]
  },
  "registerCard": {
    "rules": [
      {
        "name": "familyName",
        "condition": "true",
        "actions": [
          "data.put('familyName', fhirPath.extractValue(Group.get(0), 'Group.name'))"
        ]
      },
      {
        "name": "patientLogicalId",
        "condition": "true",
        "actions": [
          "data.put('patientLogicalId', fhirPath.extractValue(Patient, 'Patient.id').replace(\"Patient/\",\"\").split(\"/\").get(0))"
        ]
      },
      {
        "name": "patientName",
        "condition": "true",
        "actions": [
          "data.put('patientName', fhirPath.extractValue(Patient, \"Patient.name[0].select(text)\"))"
        ]
      },
      {
        "name": "patientAge",
        "condition": "true",
        "actions": [
          "data.put('patientAge', service.extractAge(Patient))"
        ]
      },
      {
        "name": "patientGender",
        "condition": "true",
        "actions": [
          "data.put('patientGender', service.extractGender(Patient))"
        ]
      },
      {
        "name": "patientId",
        "condition": "true",
        "actions": [
          "data.put('patientId', fhirPath.extractValue(Patient, 'Patient.identifier[0].value'))"
        ]
      },
      {
        "name": "otherTasksAvailable",
        "condition": "true",
        "actions": [
          "data.put('otherTasksAvailable', size(Task) > 0)"
        ]
      },
      {
        "name": "serviceStatus",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('serviceStatus', data.get('otherTasksAvailable') ? (service.evaluateToBoolean(Task, \"Task.status = 'failed' \", false) ? 'OVERDUE' : 'DUE') : 'DUE')"
        ]
      },
      {
        "name": "otherTaskDescription",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('otherTaskDescription', data.get('otherTasksAvailable') ? fhirPath.extractValue(Task.get(0), 'Task.description') : '')"
        ]
      },
      {
        "name": "otherTaskId",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('otherTaskId', data.get('otherTasksAvailable') ? fhirPath.extractValue(Task.get(0), 'Task.id') : '')"
        ]
      },
      {
        "name": "otherTaskQuestionnaireId",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('otherTaskQuestionnaireId', data.get('otherTasksAvailable') ? fhirPath.extractValue(Task.get(0), 'Task.reasonReference.reference') : '')"
        ]
      },
      {
        "name": "taskExecutionStartDate",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('taskExecutionStartDate', data.get('otherTasksAvailable') ? fhirPath.extractValue(Task.get(0), 'Task.executionPeriod.start') : now())"
        ]
      },
      {
        "name": "taskScheduleDate",
        "condition": "true",
        "priority": 3,
        "actions": [
          "data.put('taskScheduleDate', service.formatDate(data.get('taskExecutionStartDate'), \"yyyy-MM-dd'T'HH:mm:ss.SSS'Z'\", \"yyyy-MM-dd\"))"
        ]
      },
      {
        "name": "taskFor",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('taskFor', data.get('otherTasksAvailable') ? fhirPath.extractValue(Task.get(0), 'Task.for.reference') : 'Patient/' + data.get('patientLogicalId'))"
        ]
      },
      {
        "name": "bracPncVisits",
        "condition": "true",
        "actions": [
          "data.put('bracPncVisits', service.filterResources(Encounter, \"Encounter.type[0].coding.code = 'pnc-contact-in-brac' \"))"
        ]
      },
      {
        "name": "noOfBracPncVisit",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('noOfBracPncVisit', size(data.get('bracPncVisits')))"
        ]
      },
      {
        "name": "isLastPncVisitPast24Hours",
        "condition": "true",
        "priority": 3,
        "actions": [
          "data.put('isLastPncVisitPast24Hours', data.get('noOfBracPncVisit') > 0 ? fhirPath.extractValue(service.filterResources(Encounter, \"Encounter.type[0].coding.code = 'pnc-contact-in-brac' \").get(0), \"Encounter.period.start < now() - 24 'hours'\") : true)"
        ]
      },
      {
        "name": "pncFollowupTaskName",
        "condition": "true",
        "priority": 4,
        "actions": [
          "data.put('pncFollowupTaskName', (data.get('noOfBracPncVisit') == 0 ? '1st' : data.get('noOfBracPncVisit') == 1 ? '2nd' : data.get('noOfBracPncVisit') == 2 ? '3rd' : '4th') + ' PNC Follow Up Visit')"
        ]
      },
      {
        "name": "applicableForPncFollowup",
        "condition": "true",
        "priority": 4,
        "actions": [
          "data.put('applicableForPncFollowup', data.get('noOfBracPncVisit') < 4 and data.get('isLastPncVisitPast24Hours'))"
        ]
      },
      {
        "name": "showMemberTasks",
        "condition": "true",
        "priority": 5,
        "actions": [
          "data.put('showMemberTasks', data.get('applicableForPncFollowup') || data.get('otherTasksAvailable'))"
        ]
      },
      {
        "name": "taskDescription",
        "condition": "true",
        "priority": 5,
        "actions": [
          "data.put('taskDescription', data.get('applicableForPncFollowup') ? data.get('pncFollowupTaskName') : data.get('otherTaskDescription'))"
        ]
      },
      {
        "name": "taskId",
        "condition": "true",
        "priority": 5,
        "actions": [
          "data.put('taskId', data.get('applicableForPncFollowup') ? null : data.get('otherTaskId'))"
        ]
      },
      {
        "name": "taskQuestionnaireId",
        "condition": "true",
        "priority": 5,
        "actions": [
          "data.put('taskQuestionnaireId', data.get('applicableForPncFollowup') ? '6058' : data.get('otherTaskQuestionnaireId'))"
        ]
      },
      {
        "name": "pncObservationId",
        "condition": "true",
        "priority": 3,
        "actions": [
          "data.put('pncObservationId', fhirPath.extractValue(stockObservations.get(0), 'Observation.id').replace(\"Observation/\",\"\").split(\"/\").get(0) )"
        ]
      },
      {
        "name": "pncPreviousBalance",
        "condition": "true",
        "priority": 3,
        "actions": [
          "data.put('pncPreviousBalance', fhirPath.extractValue(stockObservations.get(0), 'Observation.component.value.value') )"
        ]
      },
      {
        "name": "activeFlags",
        "condition": "true",
        "actions": [
          "data.put('activeFlags', service.filterResources(stockOutFlags, \"Flag.status = 'active'\"))"
        ]
      },
      {
        "name": "pncStockOutFlagId",
        "condition": "true",
        "priority": 2,
        "actions": [
          "data.put('pncStockOutFlagId', fhirPath.extractValue(data.get('activeFlags').get(0), 'Flag.id').replace(\"Flag/\",\"\").split(\"/\").get(0) )"
        ]
      },
      {
        "name": "activeDeliveryDate",
        "condition": "true",
        "actions": [
          "data.put('activeDeliveryDate', fhirPath.extractValue(service.filterResources(Condition, 'Condition.code.coding.code=\"234234234\"').get(0), \"Condition.onset\"))"
        ]
      },
      {
        "name": "riskyPncConditionId",
        "condition": "true",
        "actions": [
          "data.put('riskyPncConditionId', service.filterResources(Condition, \"Condition.code.coding.code = 'high-risk-pnc'\").get(0).idElement.idPart)"
        ]
      }
    ],
    "views": [
      {
        "viewType": "COLUMN",
        "children": [
          {
            "viewType": "SERVICE_CARD",
            "details": [
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "@{patientName}",
                "primaryTextColor": "#000000"
              },
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "{{patient.age}}",
                "primaryTextColor": "#939596"
              },
              {
                "viewType": "COMPOUND_TEXT",
                "primaryText": "{{family.name.family}}",
                "primaryTextColor": "#939596",
                "fontSize": 14
              }
            ],
            "showVerticalDivider": false,
            "serviceButton": {
              "visible": "@{showMemberTasks}",
              "text": "@{taskDescription}",
              "status": "@{serviceStatus}",
              "smallSized": true,
              "actions": [
                {
                  "trigger": "ON_CLICK",
                  "workflow": "LAUNCH_QUESTIONNAIRE",
                  "questionnaire": {
                    "id": "@{taskQuestionnaireId}",
                    "title": "@{taskDescription}",
                    "saveButtonText": "Save",
                    "taskId": "@{taskId}",
                    "resourceIdentifier": "@{taskFor}"
                  },
                  "params": [
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "ae2f17cb-deff-48a6-8ece-27e6bd475f30",
                      "dataType": "DATE",
                      "key": "taskScheduleDate",
                      "value": "@{taskScheduleDate}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "54777657-5ff3-44d6-fe0d-317cce261588",
                      "dataType": "STRING",
                      "key": "pncFollowupTaskName",
                      "value": "@{pncFollowupTaskName}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "bd4dba60-545c-4946-88c2-29c85f9bdf7e",
                      "dataType": "DATETIME",
                      "key": "activeDeliveryDate",
                      "value": "@{activeDeliveryDate}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "6d331134-5e5d-47eb-c828-22d5927c67ba",
                      "dataType": "INTEGER",
                      "key": "noOfBracPncVisit",
                      "value": "@{noOfBracPncVisit}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "9e5b72da-8e7c-4646-8e12-f3bacb5ac50a",
                      "dataType": "INTEGER",
                      "key": "pncPreviousBalance",
                      "value": "@{pncPreviousBalance}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "d9fc1aaf-00d8-429f-d5ba-3b1831921b1d",
                      "dataType": "STRING",
                      "key": "pncObservationId",
                      "value": "@{pncObservationId}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "9fc038a4-1526-4e2b-826a-1833b654a045",
                      "dataType": "STRING",
                      "key": "pncStockOutFlagId",
                      "value": "@{pncStockOutFlagId}"
                    },
                    {
                      "paramType": "PREPOPULATE",
                      "linkId": "a1f75d6a-7be8-42c6-9dbf-7ef293b49227",
                      "dataType": "STRING",
                      "key": "riskyPncConditionId",
                      "value": "@{riskyPncConditionId}"
                    }
                  ]
                }
              ]
            },
            "actions": [
              {
                "trigger": "ON_CLICK",
                "workflow": "LAUNCH_PROFILE",
                "id": "defaultProfile"
              }
            ]
          }
        ]
      }
    ]
  }
}

